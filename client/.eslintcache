[{"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/index.js":"1","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/App.js":"2","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/reportWebVitals.js":"3","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/auth/Login.js":"4","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/Home.js":"5","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/auth/Register.js":"6","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/nav/Header.js":"7","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/firebase.js":"8","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/auth/RegisterComplete.js":"9","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/reducers/index.js":"10","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/reducers/userReducer.js":"11","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/auth/ForgotPassword.js":"12","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/functions/auth.js":"13","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/user/History.js":"14","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/routes/UserRoute.js":"15","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/routes/LoadingToRedirect.js":"16","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/nav/UserNav.js":"17","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/user/Password.js":"18","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/user/Wishlist.js":"19","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/AdminDashboard.js":"20","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/routes/AdminRoute.js":"21","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/nav/AdminNav.js":"22","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/category/CategoryCreate.js":"23","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/functions/category.js":"24","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/category/CategoryUpdate.js":"25","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/forms/CategoryForm.js":"26","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/forms/LocalSearch.js":"27","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/sub/SubCreate.js":"28","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/functions/sub.js":"29","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/sub/SubUpdate.js":"30","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/product/ProductCreate.js":"31","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/functions/product.js":"32","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/forms/ProductCreateForm.js":"33","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/forms/FileUpload.js":"34","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/cards/AdminProductCard.js":"35","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/product/AllProducts.js":"36","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/product/ProductUpdate.js":"37","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/forms/ProductUpdateForm.js":"38","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/cards/ProductCard.js":"39","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/cards/Jumbotron.js":"40","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/cards/LoadingCard.js":"41","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/home/NewArrivals.js":"42","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/home/BestSellers.js":"43"},{"size":881,"mtime":1610489593976,"results":"44","hashOfConfig":"45"},{"size":3567,"mtime":1620943204834,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":1609796787278,"results":"47","hashOfConfig":"45"},{"size":4595,"mtime":1614466011270,"results":"48","hashOfConfig":"45"},{"size":774,"mtime":1626270588657,"results":"49","hashOfConfig":"45"},{"size":1672,"mtime":1614465956010,"results":"50","hashOfConfig":"45"},{"size":1948,"mtime":1614724641653,"results":"51","hashOfConfig":"45"},{"size":637,"mtime":1610318709632,"results":"52","hashOfConfig":"45"},{"size":3105,"mtime":1614465992466,"results":"53","hashOfConfig":"45"},{"size":176,"mtime":1610489042783,"results":"54","hashOfConfig":"45"},{"size":291,"mtime":1610489833331,"results":"55","hashOfConfig":"45"},{"size":1700,"mtime":1614466034970,"results":"56","hashOfConfig":"45"},{"size":803,"mtime":1614377784983,"results":"57","hashOfConfig":"45"},{"size":376,"mtime":1614203550585,"results":"58","hashOfConfig":"45"},{"size":469,"mtime":1614465791657,"results":"59","hashOfConfig":"45"},{"size":729,"mtime":1614465856349,"results":"60","hashOfConfig":"45"},{"size":599,"mtime":1614203624207,"results":"61","hashOfConfig":"45"},{"size":1717,"mtime":1614333578878,"results":"62","hashOfConfig":"45"},{"size":379,"mtime":1614203942648,"results":"63","hashOfConfig":"45"},{"size":471,"mtime":1620511408831,"results":"64","hashOfConfig":"45"},{"size":950,"mtime":1615498770498,"results":"65","hashOfConfig":"45"},{"size":1148,"mtime":1615236170368,"results":"66","hashOfConfig":"45"},{"size":4036,"mtime":1616014776620,"results":"67","hashOfConfig":"45"},{"size":1176,"mtime":1620596386753,"results":"68","hashOfConfig":"45"},{"size":2072,"mtime":1616014712503,"results":"69","hashOfConfig":"45"},{"size":529,"mtime":1615847204848,"results":"70","hashOfConfig":"45"},{"size":400,"mtime":1616014806472,"results":"71","hashOfConfig":"45"},{"size":5051,"mtime":1616966967759,"results":"72","hashOfConfig":"45"},{"size":914,"mtime":1616626234771,"results":"73","hashOfConfig":"45"},{"size":2755,"mtime":1616966924735,"results":"74","hashOfConfig":"45"},{"size":4226,"mtime":1619388543128,"results":"75","hashOfConfig":"45"},{"size":1202,"mtime":1626622670687,"results":"76","hashOfConfig":"45"},{"size":3513,"mtime":1618172131171,"results":"77","hashOfConfig":"45"},{"size":3705,"mtime":1619390540140,"results":"78","hashOfConfig":"45"},{"size":1150,"mtime":1620942179849,"results":"79","hashOfConfig":"45"},{"size":2393,"mtime":1620858266697,"results":"80","hashOfConfig":"45"},{"size":5004,"mtime":1623966523786,"results":"81","hashOfConfig":"45"},{"size":3530,"mtime":1623964179943,"results":"82","hashOfConfig":"45"},{"size":1119,"mtime":1626076910962,"results":"83","hashOfConfig":"45"},{"size":265,"mtime":1625783974507,"results":"84","hashOfConfig":"45"},{"size":525,"mtime":1626097707154,"results":"85","hashOfConfig":"45"},{"size":1555,"mtime":1626726037834,"results":"86","hashOfConfig":"45"},{"size":1502,"mtime":1626726519608,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1p4mudd",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/index.js",[],["185","186"],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/App.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/reportWebVitals.js",[],["187","188"],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/auth/Login.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/Home.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/auth/Register.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/nav/Header.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/firebase.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/auth/RegisterComplete.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/reducers/index.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/reducers/userReducer.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/auth/ForgotPassword.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/functions/auth.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/user/History.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/routes/UserRoute.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/routes/LoadingToRedirect.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/nav/UserNav.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/user/Password.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/user/Wishlist.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/AdminDashboard.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/routes/AdminRoute.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/nav/AdminNav.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/category/CategoryCreate.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/functions/category.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/category/CategoryUpdate.js",["189"],"import React, { useState, useEffect } from 'react';\nimport AdminNav from '../../../components/nav/AdminNav';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { getCategory, updateCategory } from '../../../functions/category';\n//import { useParams } from 'react-router-dom'; //instead I'm going to use the 'match' prop \nimport CategoryForm from '../../../components/forms/CategoryForm';\n\nconst CategoryUpdate = ({history, match}) => {\n\n    const { user } = useSelector((state) => ({...state}));\n    const [name, setName] = useState('');\n    const [loading, setLoading] = useState(false);\n    //let { slug } = useParams();\n    \n\n    //fetching all categories from database and rendering them on frontend:\n    useEffect(()=>{\n        //console.log(slug)\n        //console.log(match)\n        loadCategory();\n    }, []);\n\n    const loadCategory = () => {\n        getCategory(match.params.slug)\n        .then((c)=> setName(c.data.name));\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        //console.log(name)\n        setLoading(true);\n        updateCategory(match.params.slug, {name: name}, user.token)\n        .then((res)=> {\n            setLoading(false);\n            setName(\"\");\n            toast.success(`\"${res.data.name}\" was updated`);\n            history.push('/admin/category');\n        })\n        .catch((err)=> {\n            console.log(err);\n            setLoading(false);\n            if(err.response.status === 400) toast.error(err.response.data);\n        });\n    }\n\n    return (\n        <div className=\"container-fluid\">\n        <div className=\"row\">\n            <div className=\"col-md-2\">\n                <AdminNav></AdminNav>\n            </div>\n            <div className=\"col\">\n                {loading? <h4 className=\"text-danger\">Loading...</h4> : <h4>Update Category </h4>}\n                <CategoryForm handleSubmit={handleSubmit} name={name} setName={setName}></CategoryForm>\n                <hr></hr>\n            </div>\n        </div>\n    </div>\n    );\n};\n\nexport default CategoryUpdate;","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/forms/CategoryForm.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/forms/LocalSearch.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/sub/SubCreate.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/functions/sub.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/sub/SubUpdate.js",["190"],"import React, { useState, useEffect } from 'react';\nimport AdminNav from '../../../components/nav/AdminNav';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { getCategories } from '../../../functions/category';\nimport { getSub, updateSub } from '../../../functions/sub';\nimport CategoryForm from '../../../components/forms/CategoryForm';\n\nconst SubUpdate = ({history, match}) => {\n\n    const { user } = useSelector((state) => ({...state}));\n    const [name, setName] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [parent, setParent] = useState('');\n    const [categories, setCategories] = useState([]);\n\n    //fetching all categories from database and rendering them on frontend:\n    useEffect(()=>{\n        loadCategories();\n        loadSub();\n    }, []);\n\n    const loadCategories = () => {\n        getCategories()\n        .then((c) => setCategories(c.data));\n    };\n\n    const loadSub = () => {\n        getSub(match.params.slug)\n        .then((s)=> {\n            setName(s.data.name);\n            setParent(s.data.parent);\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        //console.log(name)\n        setLoading(true);\n        updateSub(match.params.slug, {name: name, parent: parent}, user.token)\n        .then((res)=> {\n            setLoading(false);\n            setName(\"\");\n            toast.success(`\"${res.data.name}\" was updated`);\n            history.push('/admin/sub');\n        })\n        .catch((err)=> {\n            console.log(err);\n            setLoading(false);\n            if(err.response.status === 400) toast.error(err.response.data);\n        });\n    }\n\n    return (\n        <div className=\"container-fluid\">\n        <div className=\"row\">\n            <div className=\"col-md-2\">\n                <AdminNav></AdminNav>\n            </div>\n            <div className=\"col\">\n                \n                {loading? <h4 className=\"text-danger\">Loading...</h4> : <h4>Update Subcategory </h4>}\n                \n                <div className=\"form-group\">\n                    <label>Parent Category</label>\n                    <select name=\"category\" className=\"form-control\" onChange={(e) => setParent(e.target.value)}>\n                        <option>Please Select</option>\n                        {categories.length > 0 && categories.map((c) => (<option key={c._id} value={c._id} selected={c._id === parent}>{c.name}</option>))}             \n                    </select>\n                </div>\n\n                <CategoryForm handleSubmit={handleSubmit} name={name} setName={setName}></CategoryForm>\n                \n                <hr></hr>\n\n            </div>\n        </div>\n    </div>\n    );\n};\n\nexport default SubUpdate;","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/product/ProductCreate.js",["191"],"import React, { useState, useEffect } from 'react';\nimport AdminNav from '../../../components/nav/AdminNav';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { createProduct } from '../../../functions/product';\nimport ProductCreateForm from '../../../components/forms/ProductCreateForm';\nimport { getCategories, getCategorySubs } from '../../../functions/category';\nimport FileUpload from '../../../components/forms/FileUpload';\nimport {LoadingOutlined} from '@ant-design/icons';\n\nconst initialState = {\n    title: '',\n    description: '',\n    price: '',\n    categories: [],\n    category: '',\n    subs: [],\n    shipping: '',\n    quantity: '',\n    images: [],\n    colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"],\n    brands: [\"Apple\", \"Samsung\", \"Microsoft\", \"Dell\", \"Asus\", \"Acer\", \"Lenovo\", \"Toshiba\", \"hp\"],\n    color: '',\n    brand: ''\n};\n\nconst ProductCreate = () => {\n\n    const [values, setValues] = useState(initialState);\n    const [subOptions, setSubOptions] = useState([]); //subcategories once the parent category is selected\n    const [showSub, setShowSub] = useState(false); //subcategories not visible until parent category is selected\n    const [loading, setLoading] = useState(false);\n\n    const { user } = useSelector((state) => ({ ...state}));\n\n    //fetching all categories from database and rendering them on frontend:\n    useEffect(()=>{\n        loadCategories(); \n    }, []);\n\n    const loadCategories = () => {\n        getCategories()\n        .then((c) => setValues({...values, categories: c.data}));\n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        createProduct(values, user.token)\n        .then(res => {\n            console.log(res);\n            window.alert(`\"${res.data.title}\" was created`);\n            window.location.reload(); //once the iser click ok on the previous alert, the page'll reload and the form fields will be clear again.\n        })\n        .catch(err => {\n            console.log(err);\n            //if (err.response.status === 400) toast.error(err.response.data);\n            toast.error(err.response.data.err);\n        })\n        \n    }\n\n    const handleChange = (e) => {\n        setValues({...values, [e.target.name]: e.target.value});\n        //console.log(e.target.name, \"-----\", e.target.value);\n    }\n\n    //When the user selects a category, the subcategories attached to that parent category will be fetch.\n    const handleCategoryChange = (e) => {\n        e.preventDefault();\n        console.log('category clicked: ', e.target.value);\n        setValues({...values, subs:[] ,category: e.target.value});\n        getCategorySubs(e.target.value)\n        .then((res) => {\n            //console.log('subcategories attached to the category selected: ', res);\n            setSubOptions(res.data);\n        });\n        setShowSub(true); //make visible the subcategories attached to the category selected\n    }\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <AdminNav></AdminNav>\n                </div>\n                <div className=\"col-md-10\">\n                    {loading ? <LoadingOutlined className=\"text-danger h1\"></LoadingOutlined> : (<h4>Create Product</h4>)}\n                    <hr></hr>\n\n                    {JSON.stringify(values.images)}\n\n                    <div className=\"p-3\">\n                        <FileUpload \n                            values={values} \n                            setValues={setValues}\n                            setLoading={setLoading}\n                        ></FileUpload>\n                    </div>\n\n                    <ProductCreateForm \n                        handleSubmit={handleSubmit} \n                        handleChange={handleChange} \n                        values={values} \n                        setValues={setValues}\n                        handleCategoryChange={handleCategoryChange}\n                        subOptions={subOptions}\n                        showSub={showSub}\n                    >\n                    </ProductCreateForm>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default ProductCreate;","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/functions/product.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/forms/ProductCreateForm.js",["192","193","194","195","196"],"import React from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nconst ProductCreateForm = ({\n    handleSubmit, \n    handleChange, \n    values,\n    setValues, \n    handleCategoryChange,\n    subOptions,\n    showSub\n}) => {\n    \n    //destructuring so later i dont have to use--> values.title .....\n    const { \n        title, \n        description, \n        price, \n        categories, \n        category, \n        subs, \n        shipping, \n        quantity, \n        images, \n        colors, \n        color, \n        brands, \n        brand \n    } = values;\n    \n    \n    return (\n\n    <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n            <label>Title</label>\n            <input type=\"text\" name=\"title\" className=\"form-control\" value={title} onChange={handleChange}></input>\n        </div>\n        <div className=\"form-group\">\n            <label>Description</label>\n            <input type=\"text\" name=\"description\" className=\"form-control\" value={description} onChange={handleChange}></input>\n        </div>\n        <div className=\"form-group\">\n            <label>Price</label>\n            <input type=\"number\" name=\"price\" className=\"form-control\" value={price} onChange={handleChange}></input>\n        </div>\n        <div className=\"form-group\">\n            <label>Shipping</label>\n            <select name=\"shipping\" className=\"form-control\" onChange={handleChange}>\n                <option>Please select</option>\n                <option value=\"No\">No</option>\n                <option value=\"Yes\">Yes</option>\n            </select>\n        </div>\n        <div className=\"form-group\">\n            <label>Quantity</label>\n            <input type=\"number\" name=\"quantity\" className=\"form-control\" value={quantity} onChange={handleChange}></input>\n        </div>\n        <div className=\"form-group\">\n            <label>Color</label>\n            <select name=\"color\" className=\"form-control\" onChange={handleChange}>\n                <option>Please select</option>\n                {colors.map((c)=> (<option key={c} value={c}>{c}</option>))}\n            </select>\n        </div>\n        <div className=\"form-group\">\n            <label>Brand</label>\n            <select name=\"brand\" className=\"form-control\" onChange={handleChange}>\n                <option>Please select</option>\n                {brands.map((b)=> (<option key={b} value={b}>{b}</option>))}\n            </select>\n        </div>\n\n        <div className=\"form-group\">\n            <label>Category</label>\n            <select name=\"category\" className=\"form-control\" onChange={handleCategoryChange}>\n                <option>Please Select</option>\n                {categories.length > 0 && categories.map((c) => (<option key={c._id} value={c._id}>{c.name}</option>))}\n                \n            </select>\n        </div>\n\n        { showSub && \n            <div>\n                <label>Subcategories</label>\n                <Select\n                mode=\"multiple\"\n                style={{width: '100%'}}\n                placeholder=\"Please select\"\n                value={subs}\n                onChange={(value) => setValues({ ...values, subs: value})}\n            >\n                {subOptions.length && subOptions.map((s) => (\n                    <Option key={s._id} value={s._id}>{s.name}</Option>\n                ))}\n                </Select>\n            </div>\n        }\n        <br></br>\n\n        <button className=\"btn btn-outline-info\">Save</button>\n    </form>\n)\n};\n\nexport default ProductCreateForm;","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/forms/FileUpload.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/cards/AdminProductCard.js",["197"],"import React from 'react';\nimport {Card} from 'antd';\nimport laptopImage from '../../images/laptop.jpg';\nimport {EditOutlined, DeleteOutlined} from '@ant-design/icons';\nimport {Link} from 'react-router-dom';\n\nconst {Meta} = Card;\n\nconst AdminProductCard = ({product, handleRemove}) => {\n\n    const {title, description, images, slug} = product;\n\n    return  (\n        <Card \n            cover={\n                <img \n                    src={images && images.length ? images[0].url : laptopImage} \n                    style={{height:'150px', objectFit:'cover'}}\n                    className='p-1'\n                />}\n            actions={[\n               <Link to={`/admin/product/${slug}`}>\n                <EditOutlined className=\"text-warning\"/>\n               </Link>, \n               <DeleteOutlined \n                className=\"text-warning\" \n                onClick={() => handleRemove(slug)}\n               />\n            ]}\n        >\n            <Meta \n                title={title} \n                description={`${description && description.substring(0,40)}...`}\n            />\n        </Card>\n        )\n};\n\nexport default AdminProductCard;","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/product/AllProducts.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/pages/admin/product/ProductUpdate.js",["198"],"import React, { useState, useEffect } from 'react';\nimport AdminNav from '../../../components/nav/AdminNav';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport {getProduct, updateProduct} from '../../../functions/product';\nimport { getCategories, getCategorySubs } from '../../../functions/category';\nimport FileUpload from '../../../components/forms/FileUpload';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport ProductUpdateForm from '../../../components/forms/ProductUpdateForm';\n\n\nconst initialState = {\n  title: '',\n  description: '',\n  price: '',\n  category: '',\n  subs: [],\n  shipping: '',\n  quantity: '',\n  images: [],\n  colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"],\n  brands: [\"Apple\", \"Samsung\", \"Microsoft\", \"Dell\", \"Asus\", \"Acer\", \"Lenovo\", \"Toshiba\", \"hp\"],\n  color: '',\n  brand: ''\n};\n\nconst ProductUpdate = ({match, history}) => {\n\n  const {user} = useSelector((state) => ({ ...state}));\n  const {slug} = match.params;\n  const [values, setValues] = useState(initialState);\n  const [categories, setCategories] = useState([]);\n  const [subOptions, setSubOptions] = useState([]); //subcategories once the parent category is selected\n  const [arrayOfSubIds, setArrayOfSubIds] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(''); //to check if the category selected is the same that came from database\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    loadProduct();\n    loadCategories();\n  }, []);\n    \n  const loadProduct = () => {\n    //1st. Loading the product\n    getProduct(slug)\n    .then((p) => {\n        //console.log(p);\n        setValues({...values, ...p.data});\n        //2nd. Loading the subs that belong to that product.\n        getCategorySubs(p.data.category._id)\n        .then((res) => {\n            setSubOptions(res.data); //Showing the subcategories when the user runs the page for the 1st time\n        });\n        //3rd. Preparing array of Ids, so it can be used on Select MUI component.\n        let array = [];\n        p.data.subs.map((s) => array.push(s._id));\n        setArrayOfSubIds((prev) => array); //refreshed the previous values in the array with the new ones.\n    })\n    .catch((e) => {\n        console.log(e);\n    })\n  };\n\n  const loadCategories = () => {\n    getCategories()\n    .then((c) => setCategories(c.data));\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    values.subs = arrayOfSubIds;\n    values.category = selectedCategory ? selectedCategory : values.category;\n\n    updateProduct(slug, values, user.token)\n    .then((res) => {\n      setLoading(false);\n      toast.success(`\"${res.data.title}\" was updated`);\n      history.push('/admin/products');\n    })\n    .catch((err) => {\n      console.log(err);\n      toast.error(err.response.data.err);\n    })\n  }\n\n  const handleChange = (e) => {\n    setValues({...values, [e.target.name]: e.target.value});\n    //console.log(e.target.name, \"-----\", e.target.value);\n  }\n\n  //When the user selects a category, the subcategories attached to that parent category will be fetch.\n  const handleCategoryChange = (e) => {\n    e.preventDefault();\n    console.log('category clicked: ', e.target.value);\n    setValues({...values, subs:[] });\n    setSelectedCategory(e.target.value);\n    getCategorySubs(e.target.value)\n    .then((res) => {\n        //console.log('subcategories attached to the category selected: ', res);\n        setSubOptions(res.data);\n    });\n    //if user clicks different category and then clicks back to the original category:\n    if(values.category._id === e.target.value){\n        loadProduct();\n    }\n    setArrayOfSubIds([]); //cleaned the previus tags selected.\n  }\n\n\n  return (\n    <div className=\"container-fluid\">\n        <div className=\"row\">\n            <div className=\"col-md-2\">\n                <AdminNav></AdminNav>\n            </div>\n            <div className=\"col-md-10\">\n                {loading ? <LoadingOutlined className=\"text-danger h1\"></LoadingOutlined> : (<h4>Create Update</h4>)}\n                <hr></hr>\n                {/* {JSON.stringify(values)} */}\n\n                <div className=\"p-3\">\n                    <FileUpload \n                        values={values} \n                        setValues={setValues}\n                        setLoading={setLoading}\n                    ></FileUpload>\n                </div>\n\n                <ProductUpdateForm\n                  handleSubmit={handleSubmit} \n                  handleChange={handleChange}\n                  values={values} \n                  setValues={setValues}\n                  categories={categories}\n                  handleCategoryChange={handleCategoryChange}\n                  subOptions={subOptions}\n                  arrayOfSubIds={arrayOfSubIds}\n                  setArrayOfSubIds={setArrayOfSubIds}\n                  selectedCategory={selectedCategory}\n                />\n            </div>\n        </div>\n    </div>\n  )\n};\n\nexport default ProductUpdate;","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/forms/ProductUpdateForm.js",["199","200"],"import React from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nconst ProductUpdateForm = ({\n    handleSubmit, \n    handleChange, \n    values,\n    setValues,\n    handleCategoryChange ,\n    categories,\n    subOptions,\n    arrayOfSubIds,\n    setArrayOfSubIds,\n    selectedCategory\n}) => {\n    \n    //destructuring so later i dont have to use--> values.title .....\n    const { \n        title, \n        description, \n        price, \n        category, \n        subs, \n        shipping, \n        quantity, \n        images, \n        colors, \n        color, \n        brands, \n        brand \n    } = values;\n    \n    \n    return (\n\n    <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n            <label>Title</label>\n            <input type=\"text\" name=\"title\" className=\"form-control\" value={title} onChange={handleChange}></input>\n        </div>\n        <div className=\"form-group\">\n            <label>Description</label>\n            <input type=\"text\" name=\"description\" className=\"form-control\" value={description} onChange={handleChange}></input>\n        </div>\n        <div className=\"form-group\">\n            <label>Price</label>\n            <input type=\"number\" name=\"price\" className=\"form-control\" value={price} onChange={handleChange}></input>\n        </div>\n        <div className=\"form-group\">\n            <label>Shipping</label>\n            <select value={(shipping === \"Yes\") ? \"Yes\" : \"No\"} name=\"shipping\" className=\"form-control\" onChange={handleChange}>   \n                <option value=\"No\">No</option>\n                <option value=\"Yes\">Yes</option>\n            </select>\n        </div>\n        <div className=\"form-group\">\n            <label>Quantity</label>\n            <input type=\"number\" name=\"quantity\" className=\"form-control\" value={quantity} onChange={handleChange}></input>\n        </div>\n        <div className=\"form-group\">\n            <label>Color</label>\n            <select value={color} name=\"color\" className=\"form-control\" onChange={handleChange}>\n                {colors.map((c)=> (<option key={c} value={c}>{c}</option>))}\n            </select>\n        </div>\n        <div className=\"form-group\">\n            <label>Brand</label>\n            <select value={brand} name=\"brand\" className=\"form-control\" onChange={handleChange}>\n                {brands.map((b)=> (<option key={b} value={b}>{b}</option>))}\n            </select>\n        </div>\n        <div className=\"form-group\">\n            <label>Category</label>\n            <select \n                name=\"category\" \n                className=\"form-control\" \n                onChange={handleCategoryChange}\n                value={selectedCategory ? selectedCategory : category._id}\n            >\n                {categories.length > 0 && categories.map((c) => (<option key={c._id} value={c._id}>{c.name}</option>))}\n            </select>\n        </div>\n        <div>\n                <label>Subcategories</label>\n                <Select\n                mode=\"multiple\"\n                style={{width: '100%'}}\n                placeholder=\"Please select\"\n                value={arrayOfSubIds}\n                onChange={(value) => setArrayOfSubIds(value)}\n                >\n                {subOptions.length && subOptions.map((s) => (\n                    <Option key={s._id} value={s._id}>{s.name}</Option>\n                ))}\n                </Select>\n            </div>\n\n        <br></br>\n\n        <button className=\"btn btn-outline-info\">Save</button>\n    </form>\n)\n};\n\nexport default ProductUpdateForm;","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/cards/ProductCard.js",["201"],"import React from 'react';\nimport {Card} from 'antd';\nimport { EyeOutlined, ShoppingCartOutlined } from '@ant-design/icons';\nimport laptopImage from '../../images/laptop.jpg';\nimport {Link} from 'react-router-dom';\n\n\nconst {Meta} = Card;\n\nconst ProductCard = ({product}) => {\n\n  const {images, title, description, slug} = product;\n\n  return (\n      <Card\n        cover={\n            <img \n                src={images && images.length ? images[0].url : laptopImage} \n                style={{height:'150px', objectFit:'cover'}}\n                className='p-1'\n            />}\n        actions={[\n          <Link to={`product/${slug}`}>\n              <EyeOutlined className=\"text-warning\"/>\n              <br/>\n              View Product\n          </Link>, \n          <>\n            <ShoppingCartOutlined \n                className=\"text-warning\" \n            />\n            <br/>\n            Add to Cart\n          </>,\n        \n        ]}\n      >\n        <Meta \n          title={title} \n          description={`${description && description.substring(0,40)}...`}\n        />\n      </Card>\n  )\n};\n\nexport default ProductCard;","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/cards/Jumbotron.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/cards/LoadingCard.js",[],"/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/home/NewArrivals.js",["202"],"import React, {useEffect, useState} from \"react\";\nimport {getProducts, getProductsCount} from '../../functions/product';\nimport ProductCard from \"../cards/ProductCard\";\nimport LoadingCard from \"../cards/LoadingCard\";\nimport {Pagination} from \"antd\";\n\nconst NewArrivals = () => {\n  \n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [productsCount, setProductsCount] = useState(0);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    loadAllProducts();\n  }, [page]);\n\n  useEffect(()=> {\n    getProductsCount()\n    .then((res) => setProductsCount(res.data));\n  }, []);\n\n  const loadAllProducts = () => {\n    setLoading(true);\n    getProducts('createdAt', 'desc', page)\n    .then((res) => {\n      setProducts(res.data);\n      setLoading(false);\n    });\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        { loading ? (<LoadingCard count={3}/>) : (\n          <div className=\"row\">\n            {products.map((product) => (\n              <div key={product._id} className=\"col-md-4\">\n                <ProductCard\n                  product={product}\n                />\n              </div>\n            ))}\n          </div>\n          )\n        }\n      </div>\n      <div className=\"row\">\n        <nav className=\"col-md-4 offset-md-4 text-center pt-5 p-3\">\n          <Pagination\n            current={page}\n            total={(productsCount / 3) * 10}\n            onChange={(value) => setPage(value)}\n          />\n        </nav>\n      </div>\n    </>\n  );\n};\n\nexport default NewArrivals;","/home/ronald/programacion/udemy/react-redux-ecommerce/ecommerce/client/src/components/home/BestSellers.js",["203"],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"204","replacedBy":"208"},{"ruleId":"206","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":22,"column":8,"nodeType":"212","endLine":22,"endColumn":10,"suggestions":"213"},{"ruleId":"210","severity":1,"message":"214","line":21,"column":8,"nodeType":"212","endLine":21,"endColumn":10,"suggestions":"215"},{"ruleId":"210","severity":1,"message":"216","line":39,"column":8,"nodeType":"212","endLine":39,"endColumn":10,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":22,"column":9,"nodeType":"220","messageId":"221","endLine":22,"endColumn":17},{"ruleId":"218","severity":1,"message":"222","line":24,"column":9,"nodeType":"220","messageId":"221","endLine":24,"endColumn":17},{"ruleId":"218","severity":1,"message":"223","line":26,"column":9,"nodeType":"220","messageId":"221","endLine":26,"endColumn":15},{"ruleId":"218","severity":1,"message":"224","line":28,"column":9,"nodeType":"220","messageId":"221","endLine":28,"endColumn":14},{"ruleId":"218","severity":1,"message":"225","line":30,"column":9,"nodeType":"220","messageId":"221","endLine":30,"endColumn":14},{"ruleId":"226","severity":1,"message":"227","line":16,"column":17,"nodeType":"228","endLine":20,"endColumn":19},{"ruleId":"210","severity":1,"message":"229","line":41,"column":6,"nodeType":"212","endLine":41,"endColumn":8,"suggestions":"230"},{"ruleId":"218","severity":1,"message":"231","line":25,"column":9,"nodeType":"220","messageId":"221","endLine":25,"endColumn":13},{"ruleId":"218","severity":1,"message":"223","line":28,"column":9,"nodeType":"220","messageId":"221","endLine":28,"endColumn":15},{"ruleId":"226","severity":1,"message":"227","line":17,"column":13,"nodeType":"228","endLine":21,"endColumn":15},{"ruleId":"210","severity":1,"message":"232","line":16,"column":6,"nodeType":"212","endLine":16,"endColumn":12,"suggestions":"233"},{"ruleId":"210","severity":1,"message":"232","line":16,"column":6,"nodeType":"212","endLine":16,"endColumn":12,"suggestions":"234"},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],["235"],["236"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.","ArrayExpression",["237"],"React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["238"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["239"],"no-unused-vars","'category' is assigned a value but never used.","Identifier","unusedVar","'shipping' is assigned a value but never used.","'images' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["240"],"'subs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.",["241"],["242"],"no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"251","fix":"253"},"Update the dependencies array to be: [loadCategory]",{"range":"254","text":"255"},"Update the dependencies array to be: [loadSub]",{"range":"256","text":"257"},"Update the dependencies array to be: [loadCategories]",{"range":"258","text":"259"},"Update the dependencies array to be: [loadProduct]",{"range":"260","text":"261"},"Update the dependencies array to be: [loadAllProducts, page]",{"range":"262","text":"263"},{"range":"264","text":"263"},[852,854],"[loadCategory]",[825,827],"[loadSub]",[1440,1442],"[loadCategories]",[1512,1514],"[loadProduct]",[524,530],"[loadAllProducts, page]",[524,530]]